import java.io.*;
import java.util.Arrays;


public class ship {
	public static void main(String args[]) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		String ip[] = br.readLine().split(" ");
		int crayne[] = new int[N];
		for(int i = 0;i<N;i++) {
			crayne[i] = Integer.parseInt(ip[i]);
		}
		int M =Integer.parseInt(br.readLine());
		int boxes[] = new int[M];
		ip = br.readLine().split(" ");
		for(int i =0;i<M;i++) {
			boxes[i] = Integer.parseInt(ip[i]);
		}
		Arrays.sort(boxes);
		Arrays.sort(crayne);
		int canCarry[] = new int[N];
		for(int i =0;i<M;i++) {
			for(int j=0;j<N;j++) {
				if(boxes[i] <= crayne[j]) {
					canCarry[j]++;
					break;
				}
			}
		} 
		int canNum = N;
		int sum=0;
		for(int i =0;i<N;i++) {
			if(canCarry[i]==0) {
				canNum--;
			}
			sum += canCarry[i];
		}
		if(sum < M) {
			System.out.println(-1);
		} else {
			System.out.println(canNum);
			System.out.println(N);
			System.out.println((int)Math.ceil((double)M/(double)canNum));
		}
	}
}
